AWSTemplateFormatVersion: '2010-09-09'
Description: 'VPC and VPC Endpoints for Uploader application'

Parameters:
  EnvironmentName:
    Description: 'Application environment name'
    Type: String

  S3BucketName:
    Description: 'S3 upload bucket'
    Type: String

  ProjectTag:
    Description: 'Project tag to group related resources'
    Type: String
    Default: 'week_6_project'

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-vpc
        - Key: Project
          Value: !Ref ProjectTag

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-public-subnet-1a
        - Key: Project
          Value: !Ref ProjectTag

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-public-subnet-1b
        - Key: Project
          Value: !Ref ProjectTag

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-private-subnet-1a
        - Key: Project
          Value: !Ref ProjectTag

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-private-subnet-1b
        - Key: Project
          Value: !Ref ProjectTag

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-igw
        - Key: Project
          Value: !Ref ProjectTag

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-public-rt
        - Key: Project
          Value: !Ref ProjectTag

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: GatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable1:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-private-rt-1a
        - Key: Project
          Value: !Ref ProjectTag

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable1

  PrivateRouteTable2:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-private-rt-1b
        - Key: Project
          Value: !Ref ProjectTag

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable2

  VPCEndpointSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: 'Security group for VPC endpoints'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-vpc-endpoint-sg
        - Key: Project
          Value: !Ref ProjectTag

  S3Endpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.s3
      RouteTableIds:
        - !Ref PrivateRouteTable1
        - !Ref PrivateRouteTable2
      VpcEndpointType: Gateway
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:PutObject"
              - "s3:GetObject"
              - "s3:ListBucket"
            Resource:
              - !Sub "arn:aws:s3:::${S3BucketName}"
              - !Sub "arn:aws:s3:::${S3BucketName}/*"
          - Effect: Allow
            Principal: "*"
            Action:
              - "s3:GetObject"
            Resource:
              - !Sub "arn:aws:s3:::prod-${AWS::Region}-starport-layer-bucket/*"
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-s3-endpoint
        - Key: Project
          Value: !Ref ProjectTag

  ECRDockerEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.dkr
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !GetAtt VPCEndpointSecurityGroup.GroupId
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-ecr-dkr-endpoint
        - Key: Project
          Value: !Ref ProjectTag

  ECRAPIEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.ecr.api
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !GetAtt VPCEndpointSecurityGroup.GroupId
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-ecr-api-endpoint
        - Key: Project
          Value: !Ref ProjectTag

  CloudWatchLogsEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.logs
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !GetAtt VPCEndpointSecurityGroup.GroupId
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-logs-endpoint
        - Key: Project
          Value: !Ref ProjectTag

  RDSVPCEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VPC
      ServiceName: !Sub com.amazonaws.${AWS::Region}.rds
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref PrivateSubnet1
        - !Ref PrivateSubnet2
      SecurityGroupIds:
        - !GetAtt VPCEndpointSecurityGroup.GroupId
      PrivateDnsEnabled: true
      Tags:
        - Key: Name
          Value: !Sub ${EnvironmentName}-uploader-rds-endpoint
        - Key: Project
          Value: !Ref ProjectTag
Outputs:
  VPCId:
    Description: 'VPC ID'
    Value: !Ref VPC
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-VPC-ID

  PrivateSubnet1:
    Description: 'Private Subnet 1 ID'
    Value: !Ref PrivateSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-Private-Subnet-1

  PrivateSubnet2:
    Description: 'Private Subnet 2 ID'
    Value: !Ref PrivateSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-Private-Subnet-2

  PublicSubnet1:
    Description: 'Public Subnet 1 ID'
    Value: !Ref PublicSubnet1
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-Public-Subnet-1

  PublicSubnet2:
    Description: 'Public Subnet 2 ID'
    Value: !Ref PublicSubnet2
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-Public-Subnet-2

  PrivateRouteTable1:
    Description: "ID of the first private route table"
    Value: !Ref PrivateRouteTable1
    Export:
      Name: !Sub "${EnvironmentName}-Uploader-PrivateRouteTable1Id"

  PrivateRouteTable2:
    Description: "ID of the second private route table"
    Value: !Ref PrivateRouteTable2
    Export:
      Name: !Sub "${EnvironmentName}-Uploader-PrivateRouteTable2Id"

  VPCEndpointSecurityGroup:
    Description: 'Security Group ID for VPC endpoints'
    Value: !Ref VPCEndpointSecurityGroup
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-VPC-Endpoint-SG

  RDSVPCEndpointId:
    Description: 'RDS VPC Endpoint ID'
    Value: !Ref RDSVPCEndpoint
    Export:
      Name: !Sub ${EnvironmentName}-Uploader-RDS-Endpoint-ID
